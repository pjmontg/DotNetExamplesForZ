// -------------------------------------------------------------
// <copyright company="Pipeline Group, Inc." file="Filename.cs">
// COPYRIGHT NOTICE

// SOFTWARE CONTAINING TRADE SECRETS

// Copyright 2012 Pipeline Group, Inc.  (PIPELINE GROUP, INC ). All rights reserved.

// This software and documentation constitute an unpublished work and contain valuable
// trade secrets and proprietary information belonging to the PIPELINE GROUP, INC .
// None of the foregoing material may be copied, duplicated or disclosed without the 
// express written permission of the PIPELINE GROUP, INC .

// PIPELINE GROUP, INC  EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES CONCERNING THIS 
// SOFTWARE AND DOCUMENTATION, INCLUDING ANY WARRANTIES OF MERCHANTABILITY AND/OR FITNESS
// FOR ANY PARTICULAR PURPOSE, AND WARRANTIES OF PERFORMANCE, AND ANY WARRANTY THAT MIGHT 
// OTHERWISE ARISE FROM COURSE OF DEALING OR USAGE OF TRADE.
// NO WARRANTY IS EITHER EXPRESS OR IMPLIED WITH RESPECT TO THE USE OF THE SOFTWARE OR 
// DOCUMENTATION. 

// Under no circumstances shall PIPELINE GROUP, INC  be liable for incidental, special, indirect, direct 
// or consequential damages or loss of profits, interruption of business, or related expenses 
// which may arise from use of software or documentation, including but not limited to those 
// resulting from defects in software and/or documentation, or loss or inaccuracy of data 
// of any kind.

// </copyright>
// <author>$Author$</author>
// <remarks>
//   $HeadURL$
//   $LastChangedRevision$ 
//   $LastChangedDate$ 
//   $LastChangedBy$ 
// </remarks>  
// <summary>  
//     
// </summary> 
// ------------------------------------------------------------- 

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;

namespace Plugin_WorkAssignment.ModelAPI
{
    [DataContract]
    public partial class TECHNICIAN_ASSIGNMENT
    {
        #region Primitive Properties
    
    	/// <summary>
    	/// Retrieve ID Property
    	/// </summary>
        [DataMember]
        public virtual decimal ID
        {
            get;
            set;
        }
    
    	/// <summary>
    	/// Retrieve ACTIVITY_ID Property
    	/// </summary>
        [DataMember]
        public virtual decimal ACTIVITY_ID
        {
            get { return _aCTIVITY_ID; }
            set
            {
                if (_aCTIVITY_ID != value)
                {
                    if (ACTIVITY != null && ACTIVITY.ID != value)
                    {
                        ACTIVITY = null;
                    }
                    _aCTIVITY_ID = value;
                }
            }
        }
        private decimal _aCTIVITY_ID;
    
    	/// <summary>
    	/// Retrieve TECHNICIAN_ID Property
    	/// </summary>
        [DataMember]
        public virtual decimal TECHNICIAN_ID
        {
            get { return _tECHNICIAN_ID; }
            set
            {
                if (_tECHNICIAN_ID != value)
                {
                    if (TECHNICIAN != null && TECHNICIAN.ID != value)
                    {
                        TECHNICIAN = null;
                    }
                    _tECHNICIAN_ID = value;
                }
            }
        }
        private decimal _tECHNICIAN_ID;
    
    	/// <summary>
    	/// Retrieve WORK_DATE Property
    	/// </summary>
        [DataMember]
        public virtual System.DateTime WORK_DATE
        {
            get;
            set;
        }
    
    	/// <summary>
    	/// Retrieve ASSIGNED_HRS Property
    	/// </summary>
        [DataMember]
        public virtual decimal ASSIGNED_HRS
        {
            get;
            set;
        }
    
    	/// <summary>
    	/// Retrieve CREATED_BY Property
    	/// </summary>
        [DataMember]
        public virtual string CREATED_BY
        {
            get;
            set;
        }
    
    	/// <summary>
    	/// Retrieve CREATED_DATE Property
    	/// </summary>
        [DataMember]
        public virtual System.DateTime CREATED_DATE
        {
            get;
            set;
        }
    
    	/// <summary>
    	/// Retrieve LAST_MODIFIED_BY Property
    	/// </summary>
        [DataMember]
        public virtual string LAST_MODIFIED_BY
        {
            get;
            set;
        }
    
    	/// <summary>
    	/// Retrieve LAST_MODIFIED_DATE Property
    	/// </summary>
        [DataMember]
        public virtual Nullable<System.DateTime> LAST_MODIFIED_DATE
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual TECHNICIAN TECHNICIAN
        {
            get { return _tECHNICIAN; }
            set
            {
                if (!ReferenceEquals(_tECHNICIAN, value))
                {
                    var previousValue = _tECHNICIAN;
                    _tECHNICIAN = value;
                    FixupTECHNICIAN(previousValue);
                }
            }
        }
        private TECHNICIAN _tECHNICIAN;
    
        public virtual ACTIVITY ACTIVITY
        {
            get { return _aCTIVITY; }
            set
            {
                if (!ReferenceEquals(_aCTIVITY, value))
                {
                    var previousValue = _aCTIVITY;
                    _aCTIVITY = value;
                    FixupACTIVITY(previousValue);
                }
            }
        }
        private ACTIVITY _aCTIVITY;

        #endregion
        #region Association Fixup
    
        private void FixupTECHNICIAN(TECHNICIAN previousValue)
        {
            if (previousValue != null && previousValue.TECHNICIAN_ASSIGNMENT.Contains(this))
            {
                previousValue.TECHNICIAN_ASSIGNMENT.Remove(this);
            }
    
            if (TECHNICIAN != null)
            {
                if (!TECHNICIAN.TECHNICIAN_ASSIGNMENT.Contains(this))
                {
                    TECHNICIAN.TECHNICIAN_ASSIGNMENT.Add(this);
                }
                if (TECHNICIAN_ID != TECHNICIAN.ID)
                {
                    TECHNICIAN_ID = TECHNICIAN.ID;
                }
            }
        }
    
        private void FixupACTIVITY(ACTIVITY previousValue)
        {
            if (previousValue != null && previousValue.TECHNICIAN_ASSIGNMENT.Contains(this))
            {
                previousValue.TECHNICIAN_ASSIGNMENT.Remove(this);
            }
    
            if (ACTIVITY != null)
            {
                if (!ACTIVITY.TECHNICIAN_ASSIGNMENT.Contains(this))
                {
                    ACTIVITY.TECHNICIAN_ASSIGNMENT.Add(this);
                }
                if (ACTIVITY_ID != ACTIVITY.ID)
                {
                    ACTIVITY_ID = ACTIVITY.ID;
                }
            }
        }

        #endregion
    }
}
